version: '3.9'

services:
  postgres:
    image: postgres:16-alpine
    container_name: dq_postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 20

  jenkins:
    build:
      context: ./jenkins
    container_name: dq_jenkins
    environment:
      - CASC_JENKINS_CONFIG=/var/jenkins_home/casc_configs
      - JAVA_OPTS=-Djenkins.install.runSetupWizard=false
      - JENKINS_ADMIN_USER=${JENKINS_ADMIN_USER}
      - JENKINS_ADMIN_PASSWORD=${JENKINS_ADMIN_PASSWORD}
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - TELEGRAM_CHAT_ID=${TELEGRAM_CHAT_ID}
      - REPO_URL=${REPO_URL}
      - PGUSER=${POSTGRES_USER}
      - PGPASSWORD=${POSTGRES_PASSWORD}
      - PGHOST=${PGHOST}
      - PGPORT=${PGPORT}
      - PGDATABASE=${PGDATABASE}
    ports:
      - "8080:8080"
    volumes:
      - jenkins_home:/var/jenkins_home
      - ./jenkins/casc:/var/jenkins_home/casc_configs:ro
      - ./:/workspace:ro
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  pg_data:
  jenkins_home:
